xlim=c(-100,0),ylim=c(-10,100),
xlab="(ll0+ll1)/2",ylab="ll1-ll0")
i=3
plot(runData[[i]][,1],runData[[i]][,2],
xlim=c(-100,0),ylim=c(-10,100),
xlab="(ll0+ll1)/2",ylab="ll1-ll0")
i=4
plot(runData[[i]][,1],runData[[i]][,2],
xlim=c(-100,0),ylim=c(-10,100),
xlab="(ll0+ll1)/2",ylab="ll1-ll0")
rm(list=ls())
source("E:/iBS/trunk/core/src/iBS.R/BDVD/Common.R")
outIDs=c(10001,10002,10003,10004)
dataFiles=paste0("E:/Biostatistics/Imprinting/Joint/gid_",outIDs,".bfv")
runPredictions= vector(mode="list", length=length(dataFiles))
for(i in 1:length(dataFiles))
{
colCnt = 3
rowCnt = 1000000
mat= readBigMatrix(colCnt,rowCnt,dataFiles[i])
runPredictions[[i]]=mat
}
#====================================
#AMR revealed vs. Disconnected Region Cnt
dev.off()
dev.new()
M = length(dataFiles)
colors <- 1:M
linetype <- rep(1,M)
plotchar <- rep(19,M)
aucs=rep(0,M)
legendTxts=rep("",M)
maxRegionCnt = 200
# set up the plot
plot(c(0,maxRegionCnt*1),c(0,25), type="n", xlab="Region Count",
#plot(c(0,20),c(0,length(AMR_Names)), type="n", xlab="Region Count",
ylab="AMR revealed")
for(i in 1:length(dataFiles))
{
xs=runPredictions[[i]][,3]
ys=runPredictions[[i]][,1]
lines(xs, ys, type="l", lwd=3, lty=linetype[i], col=colors[i], pch=plotchar[i])
legendTxts[i]=paste("run =",i,", auc=",sprintf("%.2f",aucs[i]))
}
# add a legend
legend(1,25, legend=legendTxts,
cex=1, col=colors, pch=plotchar, lty=linetype, bty ="n")
rm(list=ls())
source("E:/iBS/trunk/core/src/iBS.R/BDVD/Common.R")
outIDs=c(10001,10002,10003,10004)
sampleNames=c("GM12878","H1-hESC","EBV-Quiescent1","PBMC")
dataFiles=paste0("E:/Biostatistics/Imprinting/Joint/gid_",outIDs,".bfv")
runPredictions= vector(mode="list", length=length(dataFiles))
for(i in 1:length(dataFiles))
{
colCnt = 3
rowCnt = 1000000
mat= readBigMatrix(colCnt,rowCnt,dataFiles[i])
runPredictions[[i]]=mat
}
#====================================
#AMR revealed vs. Disconnected Region Cnt
dev.off()
dev.new()
M = length(dataFiles)
colors <- 1:M
linetype <- rep(1,M)
plotchar <- rep(19,M)
aucs=rep(0,M)
legendTxts=rep("",M)
maxRegionCnt = 200
# set up the plot
plot(c(0,maxRegionCnt*1),c(0,25), type="n", xlab="Region Count",
#plot(c(0,20),c(0,length(AMR_Names)), type="n", xlab="Region Count",
ylab="AMR revealed")
for(i in 1:length(dataFiles))
{
xs=runPredictions[[i]][,3]
ys=runPredictions[[i]][,1]
lines(xs, ys, type="l", lwd=3, lty=linetype[i], col=colors[i], pch=plotchar[i])
legendTxts[i]=paste("run =",sampleNames[i])
}
# add a legend
legend(1,25, legend=legendTxts,
cex=1, col=colors, pch=plotchar, lty=linetype, bty ="n")
rm(list=ls())
source("E:/iBS/trunk/core/src/iBS.R/BDVD/Common.R")
outIDs=c(10001,10002,10003,10004)
sampleNames=c("GM12878","H1-hESC","EBV-Quiescent1","PBMC")
dataFiles=paste0("E:/Biostatistics/Imprinting/Joint/gid_",outIDs,".bfv")
runPredictions= vector(mode="list", length=length(dataFiles))
for(i in 1:length(dataFiles))
{
colCnt = 3
rowCnt = 1000000
mat= readBigMatrix(colCnt,rowCnt,dataFiles[i])
runPredictions[[i]]=mat
}
#====================================
#AMR revealed vs. Disconnected Region Cnt
dev.off()
dev.new()
M = length(dataFiles)
colors <- 1:M
linetype <- rep(1,M)
plotchar <- rep(19,M)
aucs=rep(0,M)
legendTxts=rep("",M)
maxRegionCnt = 200
# set up the plot
plot(c(0,maxRegionCnt*1),c(0,25), type="n", xlab="Region Count",
#plot(c(0,20),c(0,length(AMR_Names)), type="n", xlab="Region Count",
ylab="AMR revealed")
for(i in 1:length(dataFiles))
{
xs=runPredictions[[i]][,3]
ys=runPredictions[[i]][,1]
lines(xs, ys, type="l", lwd=3, lty=linetype[i], col=colors[i], pch=plotchar[i])
legendTxts[i]=sampleNames[i]
}
# add a legend
legend(1,25, legend=legendTxts,
cex=1, col=colors, pch=plotchar, lty=linetype, bty ="n")
rm(list=ls())
source("E:/iBS/trunk/core/src/iBS.R/BDVD/Common.R")
outIDs=c(10001,10002,10003,10004)
sampleNames=c("GM12878","H1-hESC","EBV-Quiescent1","PBMC")
dataFiles=paste0("E:/Biostatistics/Imprinting/Joint/gid_",outIDs,".bfv")
runPredictions= vector(mode="list", length=length(dataFiles))
for(i in 1:length(dataFiles))
{
colCnt = 3
rowCnt = 1000000
mat= readBigMatrix(colCnt,rowCnt,dataFiles[i])
runPredictions[[i]]=mat
}
#====================================
#AMR revealed vs. Disconnected Region Cnt
dev.off()
dev.new()
M = length(dataFiles)
colors <- 1:M
linetype <- rep(1,M)
plotchar <- rep(19,M)
aucs=rep(0,M)
legendTxts=rep("",M)
maxRegionCnt = 200
# set up the plot
plot(c(0,maxRegionCnt*1),c(0,25), type="n", xlab="Region Reported",
#plot(c(0,20),c(0,length(AMR_Names)), type="n", xlab="Region Count",
ylab="AMR Revealed")
for(i in 1:length(dataFiles))
{
xs=runPredictions[[i]][,3]
ys=runPredictions[[i]][,1]
lines(xs, ys, type="l", lwd=3, lty=linetype[i], col=colors[i], pch=plotchar[i])
legendTxts[i]=sampleNames[i]
}
# add a legend
legend(1,25, legend=legendTxts,
cex=1, col=colors, pch=plotchar, lty=linetype, bty ="n")
dev.off()
dev.new()
M = length(dataFiles)
colors <- 1:M
linetype <- rep(1,M)
plotchar <- rep(19,M)
aucs=rep(0,M)
legendTxts=rep("",M)
maxRegionCnt = 1000
# set up the plot
plot(c(0,maxRegionCnt*1),c(0,25), type="n", xlab="Region Reported",
#plot(c(0,20),c(0,length(AMR_Names)), type="n", xlab="Region Count",
ylab="AMR Revealed")
for(i in 1:length(dataFiles))
{
xs=runPredictions[[i]][,3]
ys=runPredictions[[i]][,1]
lines(xs, ys, type="l", lwd=3, lty=linetype[i], col=colors[i], pch=plotchar[i])
legendTxts[i]=sampleNames[i]
}
# add a legend
legend(1,25, legend=legendTxts,
cex=1, col=colors, pch=plotchar, lty=linetype, bty ="n")
rm(list=ls())
source("E:/iBS/trunk/core/src/iBS.R/BDVD/Common.R")
outIDs=c(10001,10002,10003,10004)
sampleNames=c("GM12878","H1-hESC","EBV-Quiescent1","PBMC")
dataFiles=paste0("E:/Biostatistics/Imprinting/Joint/gid_",outIDs,".bfv")
runPredictions= vector(mode="list", length=length(dataFiles))
for(i in 1:length(dataFiles))
{
colCnt = 3
rowCnt = 1000000
mat= readBigMatrix(colCnt,rowCnt,dataFiles[i])
runPredictions[[i]]=mat
}
#====================================
#AMR revealed vs. Disconnected Region Cnt
dev.off()
dev.new()
M = length(dataFiles)
colors <- 1:M
linetype <- rep(1,M)
plotchar <- rep(19,M)
aucs=rep(0,M)
legendTxts=rep("",M)
maxRegionCnt = 1000
# set up the plot
plot(c(0,maxRegionCnt*1),c(0,25), type="n", xlab="Region Reported",
#plot(c(0,20),c(0,length(AMR_Names)), type="n", xlab="Region Count",
ylab="AMR Revealed")
for(i in 1:length(dataFiles))
{
xs=runPredictions[[i]][,3]
ys=runPredictions[[i]][,1]
lines(xs, ys, type="l", lwd=3, lty=linetype[i], col=colors[i], pch=plotchar[i])
legendTxts[i]=sampleNames[i]
}
# add a legend
legend(1,25, legend=legendTxts,
cex=1, col=colors, pch=plotchar, lty=linetype, bty ="n")
dev.off()
dev.new()
M = length(dataFiles)
colors <- 1:M
linetype <- rep(1,M)
plotchar <- rep(19,M)
aucs=rep(0,M)
legendTxts=rep("",M)
maxBpCnt = 50*1000
# set up the plot
plot(c(0,maxRegionCnt*1),c(0,25), type="n", xlab="BP Reported",
#plot(c(0,20),c(0,length(AMR_Names)), type="n", xlab="Region Count",
ylab="AMR Revealed")
for(i in 1:length(dataFiles))
{
xs=runPredictions[[i]][,2]
ys=runPredictions[[i]][,1]
lines(xs, ys, type="l", lwd=3, lty=linetype[i], col=colors[i], pch=plotchar[i])
legendTxts[i]=sampleNames[i]
}
# add a legend
legend(1,25, legend=legendTxts,
cex=1, col=colors, pch=plotchar, lty=linetype, bty ="n")
runPredictions[[1]]
runPredictions[[1]][1:100,]
rm(list=ls())
source("E:/iBS/trunk/core/src/iBS.R/BDVD/Common.R")
outIDs=c(10001,10002,10003,10004)
sampleNames=c("GM12878","H1-hESC","EBV-Quiescent1","PBMC")
dataFiles=paste0("E:/Biostatistics/Imprinting/Joint/gid_",outIDs,".bfv")
runPredictions= vector(mode="list", length=length(dataFiles))
for(i in 1:length(dataFiles))
{
colCnt = 3
rowCnt = 1000000
mat= readBigMatrix(colCnt,rowCnt,dataFiles[i])
runPredictions[[i]]=mat
}
runPredictions[[1]][1:100,]
rm(list=ls())
source("E:/iBS/trunk/core/src/iBS.R/BDVD/Common.R")
outIDs=c(10001,10002,10003,10004)
sampleNames=c("GM12878","H1-hESC","EBV-Quiescent1","PBMC")
dataFiles=paste0("E:/Biostatistics/Imprinting/Joint/gid_",outIDs,".bfv")
runPredictions= vector(mode="list", length=length(dataFiles))
for(i in 1:length(dataFiles))
{
colCnt = 3
rowCnt = 1000000
mat= readBigMatrix(colCnt,rowCnt,dataFiles[i])
runPredictions[[i]]=mat
}
runPredictions[[1]][1:100,]
rm(list=ls())
source("E:/iBS/trunk/core/src/iBS.R/BDVD/Common.R")
outIDs=c(10001,10002,10003,10004)
sampleNames=c("GM12878","H1-hESC","EBV-Quiescent1","PBMC")
dataFiles=paste0("E:/Biostatistics/Imprinting/Joint/gid_",outIDs,".bfv")
runPredictions= vector(mode="list", length=length(dataFiles))
for(i in 1:length(dataFiles))
{
colCnt = 3
rowCnt = 1000000
mat= readBigMatrix(colCnt,rowCnt,dataFiles[i])
runPredictions[[i]]=mat
}
runPredictions[[1]][1:100,]
rm(list=ls())
source("E:/iBS/trunk/core/src/iBS.R/BDVD/Common.R")
outIDs=c(10001,10002,10003,10004)
sampleNames=c("GM12878","H1-hESC","EBV-Quiescent1","PBMC")
dataFiles=paste0("E:/Biostatistics/Imprinting/Joint/gid_",outIDs,".bfv")
runPredictions= vector(mode="list", length=length(dataFiles))
for(i in 1:length(dataFiles))
{
colCnt = 3
rowCnt = 1000000
mat= readBigMatrix(colCnt,rowCnt,dataFiles[i])
runPredictions[[i]]=mat
}
runPredictions[[2]]
rm(list=ls())
source("E:/iBS/trunk/core/src/iBS.R/BDVD/Common.R")
outIDs=c(10001,10002,10003,10004)
sampleNames=c("GM12878","H1-hESC","EBV-Quiescent1","PBMC")
dataFiles=paste0("E:/Biostatistics/Imprinting/Joint/gid_",outIDs,".bfv")
runPredictions= vector(mode="list", length=length(dataFiles))
for(i in 1:length(dataFiles))
{
colCnt = 3
rowCnt = 1000000
mat= readBigMatrix(colCnt,rowCnt,dataFiles[i])
runPredictions[[i]]=mat
}
runPredictions[[2]]
#====================================
#AMR revealed vs. base pair coverage
dev.off()
dev.new()
M = length(dataFiles)
colors <- 1:M
linetype <- rep(1,M)
plotchar <- rep(19,M)
aucs=rep(0,M)
legendTxts=rep("",M)
maxBpCnt = 50*1000
# set up the plot
plot(c(0,maxRegionCnt*1),c(0,25), type="n", xlab="BP Reported",
#plot(c(0,20),c(0,length(AMR_Names)), type="n", xlab="Region Count",
ylab="AMR Revealed")
for(i in 1:length(dataFiles))
{
xs=runPredictions[[i]][,2]
ys=runPredictions[[i]][,1]
lines(xs, ys, type="l", lwd=3, lty=linetype[i], col=colors[i], pch=plotchar[i])
legendTxts[i]=sampleNames[i]
}
# add a legend
legend(1,25, legend=legendTxts,
cex=1, col=colors, pch=plotchar, lty=linetype, bty ="n")
dev.off()
dev.new()
M = length(dataFiles)
colors <- 1:M
linetype <- rep(1,M)
plotchar <- rep(19,M)
aucs=rep(0,M)
legendTxts=rep("",M)
maxRegionCnt = 1000
# set up the plot
plot(c(0,maxRegionCnt*1),c(0,25), type="n", xlab="Region Reported",
#plot(c(0,20),c(0,length(AMR_Names)), type="n", xlab="Region Count",
ylab="AMR Revealed")
for(i in 1:length(dataFiles))
{
xs=runPredictions[[i]][,3]
ys=runPredictions[[i]][,1]
lines(xs, ys, type="l", lwd=3, lty=linetype[i], col=colors[i], pch=plotchar[i])
legendTxts[i]=sampleNames[i]
}
# add a legend
legend(1,25, legend=legendTxts,
cex=1, col=colors, pch=plotchar, lty=linetype, bty ="n")
dev.off()
dev.new()
M = length(dataFiles)
colors <- 1:M
linetype <- rep(1,M)
plotchar <- rep(19,M)
aucs=rep(0,M)
legendTxts=rep("",M)
maxBpCnt = 50*1000
# set up the plot
plot(c(0,maxBpCnt),c(0,25), type="n", xlab="BP Reported",
#plot(c(0,20),c(0,length(AMR_Names)), type="n", xlab="Region Count",
ylab="AMR Revealed")
for(i in 1:length(dataFiles))
{
xs=runPredictions[[i]][,2]
ys=runPredictions[[i]][,1]
lines(xs, ys, type="l", lwd=3, lty=linetype[i], col=colors[i], pch=plotchar[i])
legendTxts[i]=sampleNames[i]
}
# add a legend
legend(1,25, legend=legendTxts,
cex=1, col=colors, pch=plotchar, lty=linetype, bty ="n")
dev.off()
dev.new()
M = length(dataFiles)
colors <- 1:M
linetype <- rep(1,M)
plotchar <- rep(19,M)
aucs=rep(0,M)
legendTxts=rep("",M)
maxBpCnt = 500*1000
# set up the plot
plot(c(0,maxBpCnt),c(0,25), type="n", xlab="BP Reported",
#plot(c(0,20),c(0,length(AMR_Names)), type="n", xlab="Region Count",
ylab="AMR Revealed")
for(i in 1:length(dataFiles))
{
xs=runPredictions[[i]][,2]
ys=runPredictions[[i]][,1]
lines(xs, ys, type="l", lwd=3, lty=linetype[i], col=colors[i], pch=plotchar[i])
legendTxts[i]=sampleNames[i]
}
# add a legend
legend(1,25, legend=legendTxts,
cex=1, col=colors, pch=plotchar, lty=linetype, bty ="n")
library(rocr)
library(ROCR)
?performance
performance
a=[0.1,0.3,0.05]
a=c(0.1,0.3,0.05)
a<0.2
?max
c("salmon4", "red2", "dodgerblue3", "darkorange1", "green2", "yellow1")
a=c("salmon4", "red2", "dodgerblue3", "darkorange1", "green2", "yellow1")
b=rep(a,4)
b
as.int(0.3)
as.integer(0.3)
?boxplot
as.integer(1000000000000000)
as.integer(1000000000000)
as.integer(10000000000)
as.integer(10000000)
a=1024*1024*1024*100
a
str(a)
10000000000
matrix(NA,2,3)
a=4.85969e+09
b=2.5296e+09
c=2.33009e+09
b/a
b/c
a/c
a
b
c
c/a
b/a
397*250/1024
a-b-c
library(parallel)
library(latticeExtra)
rm(list=ls())
setwd("E:/iBS/trunk/core/src/iBS.R")
source("BDVD/Common.R")
data_dir="E:/iBS/trunk/analysis/iBS.Projects/JABS/Hg19/10CpG/GM12878/s03-lrdistribution"
out_dir="E:/iBS/trunk/analysis/iBS.Projects/JABS/Hg19/10CpG/GM12878/s01-amrfinder"
num_threads=4
matrix_info_fn=paste(data_dir,"/matrix_info.txt",sep="")
matTbl=read.table(matrix_info_fn,stringsAsFactors =FALSE,
sep="\t",header= TRUE)
matTbl[,2] = gsub("/dcs01/gcode/fdu1/projects/JABS/Hg19/10CpG/GM12878/s01-amrfinder/fcdcentral/FeatureValueStore",
"E:/iBS/trunk/analysis/iBS.Projects/JABS/Hg19/10CpG/GM12878/s01-amrfinder", matTbl[,2])
bfvFilePrefix = matTbl[1,"DataFile"]
rowCnt = matTbl[1,"RowCnt"]
colCnt = matTbl[1,"ColCnt"]
h0=readBigMatrixAuto(colCnt,rowCnt,bfvFilePrefix)
bfvFilePrefix = matTbl[2,"DataFile"]
rowCnt = matTbl[2,"RowCnt"]
colCnt = matTbl[2,"ColCnt"]
h1=readBigMatrixAuto(colCnt,rowCnt,bfvFilePrefix)
lr=as.numeric(2*(h1-h0))
rm(h0,h1)
bfvFilePrefix = matTbl[3,"DataFile"]
rowCnt = matTbl[3,"RowCnt"]
colCnt = matTbl[3,"ColCnt"]
stats=readBigMatrixAuto(colCnt,rowCnt,bfvFilePrefix)
colnames(stats)=c("readCnt","cpgCnt","cpgPerRead","em_iter")
cpgCnts = as.integer(stats[,2])
#plot(density(stats[,"readCnt"],na.rm=TRUE))
rm(stats)
#hist(cpgCnts,breaks=0:10, xlab="number of CpGs", ylab="Frequency", main="CpG sites for sliding windows")
lr10=lr[cpgCnts==10]
plot(density(lr10,na.rm=TRUE),xlim=c(0,30),lwd=3, col="deepskyblue")
data_dir="E:/iBS/trunk/analysis/iBS.Projects/JABS/Hg19/10CpG/GM12878/s04-lrdistribution-h0simu"
matrix_info_fn=paste(data_dir,"/matrix_info.txt",sep="")
matTbl=read.table(matrix_info_fn,stringsAsFactors =FALSE,
sep="\t",header= TRUE)
matTbl[,2] = gsub("/dcs01/gcode/fdu1/projects/JABS/Hg19/10CpG/GM12878/s02-amrfinder-h0simu/fcdcentral/FeatureValueStore",
"E:/iBS/trunk/analysis/iBS.Projects/JABS/Hg19/10CpG/GM12878/s02-amrfinder-h0simu", matTbl[,2])
bfvFilePrefix = matTbl[1,"DataFile"]
rowCnt = matTbl[1,"RowCnt"]
colCnt = matTbl[1,"ColCnt"]
h0=readBigMatrixAuto(colCnt,rowCnt,bfvFilePrefix)
bfvFilePrefix = matTbl[2,"DataFile"]
rowCnt = matTbl[2,"RowCnt"]
colCnt = matTbl[2,"ColCnt"]
h1=readBigMatrixAuto(colCnt,rowCnt,bfvFilePrefix)
lr_simu=as.numeric(2*(h1-h0))
rm(h0,h1)
#plot(density(lr_simu, na.rm=TRUE),xlim=c(0,30))
bfvFilePrefix = matTbl[3,"DataFile"]
rowCnt = matTbl[3,"RowCnt"]
colCnt = matTbl[3,"ColCnt"]
stats_simu=readBigMatrixAuto(colCnt,rowCnt,bfvFilePrefix)
cpgCnts_simu = as.integer(stats_simu[,2])
#plot(density(stats[,"readCnt"],na.rm=TRUE))
rm(stats_simu)
#hist(cpgCnts,breaks=0:10, xlab="number of CpGs", ylab="Frequency", main="CpG sites for sliding windows")
lr10_simu=lr_simu[cpgCnts_simu==10]
lines(density(lr10_simu,na.rm=TRUE),xlim=c(0,30),lwd=3, col="deepskyblue")
plot(density(lr10,na.rm=TRUE),xlim=c(0,30),lwd=2, col="deepskyblue",ylim=c(0,1.5))
lines(density(lr10_simu,na.rm=TRUE),xlim=c(0,30),lwd=2, col="deepgreen")
lines(density(lr10_simu,na.rm=TRUE),xlim=c(0,30),lwd=2, col="green")
